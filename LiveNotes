



19-08-2024
================
Selenium WebDriver
------------------------
Selenium WebDriver is an interface
Selenium WebDriver is an API for webUI Automation
=========================================================
Selenium Setup
=====================
1.Using java Project
=======================
1.create a java project
2.download selenium client library from selenium.dev site
3.right click on project-->buil path--->configure build path--->libraries
-->class path--->add external library


2.Using Maven Project
========================================
What is Maven
----------------
Maven is build management tool as well as Project mangement tool

Maven has one configuration file(POM.xml file)
=======================================
POM is project object model 
it is configuration file for all project setup

Structure
============

<project>
<depedencies>
<dependency> selenium</dependency>
</dependencies>

<build>
<plugins>
</plugins>
</build>

</project>

============================================
What is Dependency?
====================
It is a library file(executable file)

How many repository maven support?
=====================================
Two repository maven Support
1.Remote/share/central (mvnrepository.com)
2.Local repository
(c/user/m2 folder/repo)
=======================================================
20-08-2024
===================

TestCase: validate Google application title which should be Google

Step1: Open browser with Google application
Step2: Get the actual title from application
Step3: Compare actual vs expected title
Step4: Display appropriate result
Step5: close the browser/application

Exceptions In Selenium
==============================
1.If wrong url address provided
InvalidArgumentException: invalid argument





WebDriver Browser Commands
================================
1.get(url)-open application
2.getTitle()- get the title from application
3.getCurrentUrl()- get the current url of application
4.getPageSource()- get the page source
5.close()- close the current browser
6.quit()- close all open browsers/windows open by selenium

=======================================================================
WebDriver Navigations commands
===================================
To perform navigation Selenium Support Navigation Interface

1.to(url)
------------
driver.navigate().to(url)

2.back()
-----------
driver.nabigate().back()

3.forward()
----------------
driver.navigate().forward()

4.refresh()
------------
driver.navigate().refresh()

===============================================================
How to automate any WebElement
======================================
WebElement?
============
In general every web page designed with UI elements
textboxes,checkbox,link,button,dropdown
So in selenium we can called this as WebElement

In Technical Word WebElement is interface in selenium

1.To interact with any webelement first get the address of webelement
2.Identify webelement and perform action

1.To get the address Selenium Supports Locators
====================================================
What is Locator?
====================
Locators is address of webElement from WebPage

Selenium Support Total 8 locators
=======================================
1.By id
2.By name
3.By className
4.By linkText
5.By partialLinkText
6.By tagName

Dynamic Loctaors
=====================
7.By cssSelector
8.By xpath


What is By?
=================
By is a class in selenium which help to get the address


Primary locators in selenium
=============================
By id

To identify Any WebElement selenium support two method
===========================================================
1.findElement()

2.findElements()


==================================================
Actions on WebElement
========================
textbox,searchbox--->Pass data----->sendKeys("data",Keys.Keyboard key)
button,link,checkbox,radio button--->click---->click()
To clear any text/data-------->clear()

========================================================
Validate any WebElement
===========================
isDisplayed()
isEnabled()
isSelected()

====================================================
21-08-2024
==============
To identify Any WebElement selenium support two method
===========================================================
1.findElement()
-------------------
- findElement helps to identify single webelement
- It returns WebElement interface object
- If Element not found then it throws NoSuchElementException


2.findElements()
----------------------
- findElements() will help to identify multiple WebElements
- It returns List<WebElement> Object
- If Element not found It will not throws any exception
In case of List --->[]
In case of size()--->0

=================================================================
How to maximize size of browser
===================================
driver.manage().window().maximize();

className Locator
=========================


class="form-control"

class="btn btn-primary"

InvalidSelectorException: Compound class names not permitted

class="btn btn-default btn-primary"

=================================================
How to automate any HyperLink in Selenium
============================================
<a id="SignIn" href="login.html">Sign In</a>
<a>Link Text </a>

1.By linkText
--------------------
will do exact match
driver.findElement(By.linkText("Sign In")).click();

2.By partialLinkText
-----------------------
will do partial match

driver.findElement(By.partailLinkText("In")).click();

=========================================
Synchronization Issue in Selenium
==================================
Time mapping issue btween application and tool

Selenium Support two dynamic Waits
====================================
1.Implicit wait
========================
- Globally applicable to all the elements from script
- onece you create driver session apply global wait

driver.manage().timeOuts().implicitlyWait(Duration.ofSeconds(10));
Element =6 sec
Wait time=10sec
remaining 4 sec selenium will not wait it will continue with next element


2.Explicit wait
=======================



===============================================================
By tagName
=================
Number of Links
Number of Images
Number of textBoxes

WebElement Methods(special)
=============================
1.getAttribute()
-----------------------
This methods returns attribute value

2.getText()
-------------------
To get any visible text of element we use getText()
hidden html text alos we can get using getText()
====================================================================
22-08-2024
=================
Dynamic Locators
=====================
1.By cssSelector
=======================

What is css?
================
Css means cascaded style sheet is a language to provide style to html element

What is cssSelector?
====================
- It is locator to identify element based on css attribute
- faster than xpath as it travels only iin one direction (parent--->child)
- It doesn't support method



1.tagname with id
-------------------
Syntax:
============
tagname#id

<input id="user-name" name="user-name" value="">

input#user-name


2.tagname with attribute
-------------------------
Syntax
-----------
tagname[attribute='value']

input[placeholder='Password']

3.tagname with classname
-------------------------
Syntax:
-------------
tagname.classNamevalue

class="submit-button btn_action"

input.submit-button.btn_action

.tagname with id,classname and attribute
--------------------------------------------
Syntax:
--------------
tagname#id.classname[attribite='value']

<input type="submit" class="submit-button btn_action"  id="login-button">

input#login-button.submit-button[type='submit']


=======================================================================
2.By xpath
====================
What is xpath
===================
xpath is path of the element from xml/html document
xpath identify element from directly DOM(Doument Object Model)
xpath can travel from parent to child and child to parent
xpath support multiple multiple
xpath axies

=================================
HTML DOM Structue
=========================
<html>---------root node
<head>
</head>

<body>
<input>---------------element
<a>

</body>

</html>

========================================================================
Types of Xpath
==================
1.Absolute xpath
==================
	- absolute xpath always identify element from the root node
	- It starts with '/'
	/html/body/div/div/div[2]/div[1]/div/div/form/div[1]/input

2.Relative xpath
==================
	-relative xpath identify element from its relative property
	-It starts with '//'

//*[@id="user-name"]
* = all
===================================================
Syntax:
==================
//tagname[@attribute='value']

========================================
xpath with operators
=======================
1.xpath with AND
======================
//tagname[@attribute='value' and @attribute='value']


1.xpath with OR
======================
//tagname[@attribute='value' or @attribute='value']

xpath with index/position()
================================
Syntax:
============
xpath------multiple elements

(xpath)[index]


position()
=============
Syntax:
==============
(xpath)[porsition()=idex]
=======================================================
26-08-2024
==================
xpath Methods
==================
1.text()
============
Syntax:
----------------
//tagname[text()='text']

2.normalize-space()
=======================
If you want to ignore white space (trim) we use this method

Syntax:
==========
//tagname[normalize-space()='text']

3.contains()
=============

Syntax:
==========
//tagname[contains(@attribute,'value')]
or
//tagname[contains(text(),'text']

4.starts-with()
==================
Syntax:
==========
//tagname[starts-with(@attribute,'value')]
or
//tagname[starts-with(text(),'text']


xpath Axies
==================
1.ancestor
=============
Syntax:
==========
//tagname[@attribute='value']//ancestor::tagname of ancestor
find the john ancestor tbody
------------------------------
//td[text()='John']//ancestor::tbody



2.parent
============
Syntax:
==========
//tagname[@attribute='value']//parent::tagname of parent

find the john parent node
------------------------------
//td[text()='John']//parent::tr

3.child
==============
Syntax:
==========
//tagname[@attribute='value']//child::tagname of child
Get the all child text/count of row4
=================================
//tbody//tr[4]//child::td

6.following
================
Syntax:
==========
//tagname[@attribute='value']//following::tagname of following element

get all the count of tr(row) after john
===================================
//td[text()='John']//following::tr-----------2 rows

7.preceding
===================
Syntax:
==========
//tagname[@attribute='value']//preceding::tagname of preceding element


Get all preceding rows
======================
//td[text()='John']//preceding::tr

4.Following sibling
======================
Syntax:
==========
//tagname[@attribute='value']//following-sibling::tagname of following-sibling element

get all following sibblings of John
=========================================
//td[text()='John']//following-sibling::td  3

5.Preceding sibling
===========================
Syntax:
==========
//tagname[@attribute='value']//preceding-sibling::tagname of preceding-sibling element


get all the preceding siblings of John
===========================================
//td[text()='John']//preceding-sibling::td

<table id="customers" class="table">

        <tbody>--------ancestor

        <tr>-------->parent
 
         <td>4</td>-------------preceding sibling

          <td>John</td>-------Element

          <td>Robinson</td>---------following sibling

          <td>jr5527</td>
 
         <td>
              <a href="user.html"><i class="icon-pencil"></i></a>
              <a role="button" href="#myModal" data-toggle="modal"><i class="icon-remove"></i></a>
          </td>

        </tr>
      
      </tbody>
    </table>


Smaple xpath includes methods+Axies
======================================
(//input[@id='twotabsearchtextbox']//preceding::div//span[contains(@id,'glow-ingress')])[1]
===============================================
Selenium 4 relative xpath
================================
above()
below()
toRightOf()
toLeftOf()
near()
=============================================================================
27-08-2024
================
Dropdown Automation
=========================

1.Select tag based dropdown
================================
Automate such dropdown using Select class

Select dd=new Select(dropdown ele);

Is dropdown support multiple value selection?
isMultiple()

single Option Selection
----------------------------
1.selectByIndex()
2.selectByVisibleText()
3.selectByValue()

To get all the options from the dropdown
==========================================
getOptions()

---------------------------------------------
2.Bootstarp/Javascript/autosuggesion
============================================ 
xpath
============================================================
TestNG- framework
==================
Alert handling
=================
alert is javascript alert
In selenium we have Alert interface to handle alert

Alert interface provides 4 methods
===================================
1.To get the text of alert- getText()
2.To interact with Ok---->accept()
3.To interact with cancel--->dismiss()
4.to prompt----->sendKeys()

Types
===============
1.Normal Alert with Ok button
2.confirmation alert ok and cancel
3.prompt alert


How to handle authentication alert
======================================







window handling
newTab,new window
calendar
html table





































































































































































































